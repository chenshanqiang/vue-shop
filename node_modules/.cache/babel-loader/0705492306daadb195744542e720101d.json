{"remainingRequest":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\babel-loader\\lib\\index.js!G:\\Apache\\htdocs\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\Apache\\htdocs\\vue-shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\Apache\\htdocs\\vue-shop\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\Apache\\htdocs\\vue-shop\\src\\components\\Login.vue","mtime":1575814738092},{"path":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"G:\\\\Apache\\\\htdocs\\\\vue-shop\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      loginForm: {\n        username: 'admin',\n        password: '123456'\n      },\n      //这是表单验证规则对象\n      loginFormRules: {\n        //验证用户名是否合法\n        username: [{\n          required: true,\n          message: '请输入用户名称',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 6,\n          message: '长度在 2 到 6个字符',\n          trigger: 'blur'\n        }],\n        //验证密码是否合法\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 4,\n          max: 10,\n          message: '长度在 4 到 10 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    //对整个表单进行重置，将所有字段值重置为初始值并移除校验结果\n    resetLoginForm: function resetLoginForm() {\n      this.$refs.loginFormRef.resetFields();\n    },\n    //实现登录表单数据登录前的预验证\n    login: function login() {\n      var _this = this;\n\n      this.$refs.loginFormRef.validate(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(val) {\n          var ret;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (val) {\n                    _context.next = 2;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\");\n\n                case 2:\n                  _context.next = 4;\n                  return _this.$http.post('login', _this.loginForm);\n\n                case 4:\n                  ret = _context.sent;\n\n                  if (!(ret.data.meta.status !== 200)) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", _this.$message.error('登录失败'));\n\n                case 7:\n                  _this.$message.success('登录成功'); //1.将登录成功之后的token，保存到客户端的sessionStorage中\n                  //  1.1项目中除了登录之外的其他api接口，必须在登录之后才能访问\n                  //  1.2token只应在当前网站打开期间生效，所以token保存在sessionStorage中\n\n\n                  window.sessionStorage.setItem('token', ret.data.data.token); //2.通过编程式路由导航跳转到后台主页，路由地址是/home\n\n                  _this.$router.push('/home');\n\n                case 10:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,QAAA,EAAA,OADA;AAEA,QAAA,QAAA,EAAA;AAFA,OADA;AAKA;AACA,MAAA,cAAA,EAAA;AACA;AACA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,SAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,OAAA,EAAA,cAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA,CAFA;AAMA;AACA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,OAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,GAAA,EAAA,CAAA;AAAA,UAAA,GAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA,gBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA;AAPA;AANA,KAAA;AAmBA,GArBA;AAsBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,cAFA,4BAEA;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,WAAA;AACA,KAJA;AAKA;AACA,IAAA,KANA,mBAMA;AAAA;;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,QAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAA,iBAAA,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,GADA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,yBAEA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,OAAA,EAAA,KAAA,CAAA,SAAA,CAFA;;AAAA;AAEA,kBAAA,GAFA;;AAAA,wBAGA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GAHA;AAAA;AAAA;AAAA;;AAAA,mDAGA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,MAAA,CAHA;;AAAA;AAIA,kBAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,MAAA,EAJA,CAKA;AACA;AACA;;;AACA,kBAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,OAAA,EAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,EARA,CASA;;AACA,kBAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,OAAA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA;;AAAA;AAAA;AAAA;AAAA;AAYA;AAnBA;AAtBA,CAAA","sourcesContent":["<template>\r\n    <div class=\"login_container\">\r\n        <div class=\"login_box\">\r\n            <!-- 头部图标 -->\r\n            <div class=\"avatar_box\">\r\n                <img src=\"../assets/logo.png\" alt=\"\">\r\n            </div>\r\n            <!-- 用户登录表单 -->\r\n            <!-- 这里loginFormRef是引用对象，rules是验证规则 -->\r\n            <el-form ref=\"loginFormRef\" label-width=\"0px\" :model=\"loginForm\" :rules=\"loginFormRules\" class=\"login_form\">\r\n                <!-- user name -->\r\n                <el-form-item prop=\"username\">\r\n                    <el-input prefix-icon=\"iconfont icon-user\" v-model=\"loginForm.username\" ></el-input>\r\n                </el-form-item>\r\n                <!-- user password -->\r\n                <el-form-item prop=\"password\">\r\n                    <el-input prefix-icon=\"iconfont icon-3702mima\"  v-model=\"loginForm.password\" type=\"password\"></el-input>\r\n                </el-form-item>\r\n                <!-- button -->\r\n                <el-form-item class=\"btns\">\r\n                    <el-button type=\"primary\" @click=\"login\">登录</el-button>\r\n                    <el-button type=\"info\" @click=\"resetLoginForm\">重置</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n        return {\r\n            loginForm:{\r\n                username:'admin',\r\n                password:'123456'\r\n            },\r\n            //这是表单验证规则对象\r\n            loginFormRules:{\r\n                //验证用户名是否合法\r\n                username:[\r\n                    { required: true, message: '请输入用户名称', trigger: 'blur' },\r\n                    { min: 2, max: 6, message: '长度在 2 到 6个字符', trigger: 'blur' }\r\n                ],\r\n                //验证密码是否合法\r\n                password:[\r\n                    { required: true, message: '请输入密码', trigger: 'blur' },\r\n                    { min: 4, max: 10, message: '长度在 4 到 10 个字符', trigger: 'blur' }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    methods:{\r\n        //对整个表单进行重置，将所有字段值重置为初始值并移除校验结果\r\n        resetLoginForm(){\r\n            this.$refs.loginFormRef.resetFields()\r\n        },\r\n        //实现登录表单数据登录前的预验证\r\n        login(){\r\n            this.$refs.loginFormRef.validate(async val => {\r\n                if (!val) return\r\n                const ret = await this.$http.post('login',this.loginForm)\r\n                if (ret.data.meta.status !== 200) return this.$message.error('登录失败')\r\n                this.$message.success('登录成功')\r\n                //1.将登录成功之后的token，保存到客户端的sessionStorage中\r\n                //  1.1项目中除了登录之外的其他api接口，必须在登录之后才能访问\r\n                //  1.2token只应在当前网站打开期间生效，所以token保存在sessionStorage中\r\n                window.sessionStorage.setItem('token',ret.data.data.token)\r\n                //2.通过编程式路由导航跳转到后台主页，路由地址是/home\r\n                this.$router.push('/home')\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n    .login_container{\r\n        background: #2b4b6b;\r\n        height:100%;\r\n        .login_box{\r\n                position: absolute;\r\n                left: 50%;\r\n                top:50%;\r\n                transform: translate(-50%,-50%);\r\n                width: 450px;\r\n                height:300px;\r\n                border-radius:3px; \r\n                background: #fff;\r\n                .avatar_box{\r\n                    width:130px;\r\n                    height:130px;\r\n                    padding: 10px;\r\n                    border:1px solid #eee;\r\n                    border-radius: 50%;\r\n                    box-shadow: 0 0 10px #eee;\r\n                    background:#fff;\r\n                    position: absolute;\r\n                    left:50%;\r\n                    transform: translate(-50%,-50%);\r\n                    img{\r\n                        width: 100%;\r\n                        height: 100%;\r\n                        border-radius:50%;\r\n                        background:#eee;\r\n                    }\r\n                }\r\n            }\r\n    }\r\n    .login_form{\r\n       position: absolute; \r\n       bottom: 0px;\r\n       width: 100%;\r\n       padding: 0 10px;\r\n       box-sizing: border-box;\r\n    }\r\n    .btns{\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n</style>"],"sourceRoot":"src/components"}]}