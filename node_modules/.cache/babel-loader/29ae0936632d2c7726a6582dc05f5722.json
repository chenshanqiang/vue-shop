{"remainingRequest":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\babel-loader\\lib\\index.js!G:\\Apache\\htdocs\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\Apache\\htdocs\\vue-shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\Apache\\htdocs\\vue-shop\\src\\components\\power\\Roles.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\Apache\\htdocs\\vue-shop\\src\\components\\power\\Roles.vue","mtime":1579003621312},{"path":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576841594855},{"path":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\babel-loader\\lib\\index.js","mtime":1576841583707},{"path":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576841594855},{"path":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1576841869337}],"contextDependencies":[],"result":["import _toConsumableArray from \"G:\\\\Apache\\\\htdocs\\\\vue-shop\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"G:\\\\Apache\\\\htdocs\\\\vue-shop\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      // 所有权限列表数据\n      rightsList: [],\n      rightProps: {\n        children: 'children',\n        label: 'authName'\n      },\n      // 所有角色列表数据\n      roleList: [],\n      // 默认设置分配角色权限对话框隐藏\n      setRightDialogVisible: false,\n      // 默认选中节点Id的数组值\n      defKeys: [],\n      // 角色Id\n      roleId: ''\n    };\n  },\n  created: function created() {\n    this.getRolesList();\n  },\n  methods: {\n    // 获取角色列表数据\n    getRolesList: function () {\n      var _getRolesList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$http.get('roles');\n\n              case 2:\n                _ref = _context.sent;\n                res = _ref.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error(res.meta.msg));\n\n              case 6:\n                this.roleList = res.data;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getRolesList() {\n        return _getRolesList.apply(this, arguments);\n      }\n\n      return getRolesList;\n    }(),\n    // 删除角色指定权限\n    removeRightById: function () {\n      var _removeRightById = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(row, rightId) {\n        var confirmResult, _ref2, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$confirm('此操作将永久删除该权限, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confirmResult = _context2.sent;\n\n                if (!(confirmResult !== 'confirm')) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.info('已取消删除'));\n\n              case 5:\n                _context2.next = 7;\n                return this.$http.delete(\"roles/\".concat(row.id, \"/rights/\").concat(rightId));\n\n              case 7:\n                _ref2 = _context2.sent;\n                res = _ref2.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.error(res.meta.msg));\n\n              case 11:\n                // 将返回的当前角色下最新的权限数据赋值\n                row.children = res.data;\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function removeRightById(_x, _x2) {\n        return _removeRightById.apply(this, arguments);\n      }\n\n      return removeRightById;\n    }(),\n    // 展示分配角色权限对话框\n    showSetRightDialog: function () {\n      var _showSetRightDialog = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(role) {\n        var _ref3, res;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.roleId = role.id;\n                _context3.next = 3;\n                return this.$http.get('rights/tree');\n\n              case 3:\n                _ref3 = _context3.sent;\n                res = _ref3.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", this.$message.error(res.meta.msg));\n\n              case 7:\n                this.rightsList = res.data;\n                this.getLeafKeys(role, this.defKeys);\n                this.setRightDialogVisible = !this.setRightDialogVisible;\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function showSetRightDialog(_x3) {\n        return _showSetRightDialog.apply(this, arguments);\n      }\n\n      return showSetRightDialog;\n    }(),\n    //通过递归的形式，获取角色下所有三级权限的id，并保存defKeys数组中\n    getLeafKeys: function getLeafKeys(node, arr) {\n      var _this = this;\n\n      // 如果当前node节点不包括children属性，则是三级节点\n      if (!node.children) {\n        return arr.push(node.id);\n      }\n\n      node.children.forEach(function (item) {\n        return _this.getLeafKeys(item, arr);\n      });\n    },\n    // 监听分配权限对话框事件，对defkeys初始化\n    setRightDialog: function setRightDialog() {\n      this.defKeys = [];\n    },\n    // 获取半选和全选的权限的id\n    allotRights: function () {\n      var _allotRights = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var keys, idStr, _ref4, res;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                // js展开运算符\n                keys = [].concat(_toConsumableArray(this.$refs.treeRefs.getCheckedKeys()), _toConsumableArray(this.$refs.treeRefs.getHalfCheckedKeys()));\n                idStr = keys.join(',');\n                _context4.next = 4;\n                return this.$http.post(\"roles/\\n      \".concat(this.roleId, \"/rights\"), {\n                  rids: idStr\n                });\n\n              case 4:\n                _ref4 = _context4.sent;\n                res = _ref4.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.$message.error(res.meta.msg));\n\n              case 8:\n                this.$message.success(res.meta.msg);\n                this.getRolesList();\n                this.setRightDialogVisible = false;\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function allotRights() {\n        return _allotRights.apply(this, arguments);\n      }\n\n      return allotRights;\n    }()\n  }\n};",{"version":3,"sources":["Roles.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>权限管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>角色列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n    <!-- 添加角色按钮 -->\r\n      <el-row>\r\n        <el-col>\r\n          <el-button type=\"primary\">添加角色</el-button>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 角色列表区域 -->\r\n      <el-table :data=\"roleList\" border stripe>\r\n        <!-- 展开列 -->\r\n        <el-table-column type=\"expand\">\r\n          <!-- 通过插槽获取数据 -->\r\n          <template slot-scope=\"scope\">\r\n            <el-row :class=\"['bdbody',i1 === 0 ? 'bdtop':'','vccenter' ]\" v-for=\"(item1, i1) in scope.row.children\" :key=\"item1.id\">\r\n              <!-- 渲染一级权限 -->\r\n              <el-col :span=\"5\">\r\n                <el-tag closable @close='removeRightById(scope.row,item1.id)'>\r\n                  {{ item1.authName }}\r\n                </el-tag>\r\n                <i class=\"el-icon-caret-right\"></i>\r\n              </el-col>\r\n              <!-- 渲染二级和三级权限 -->\r\n              <el-col :span=\"19\">\r\n                <!-- 通过for循环渲染二级权限 -->\r\n                <el-row :class=\"[ i2 === 0 ? '':'bdtop' ,'vccenter']\"  v-for=\"(item2, i2) in item1.children\" :key=\"item2.id\">\r\n                  <el-col :span='6'>\r\n                    <el-tag type=\"success\" closable @close='removeRightById(scope.row,item2.id)'>\r\n                      {{ item2.authName }}\r\n                    </el-tag>\r\n                    <i class=\"el-icon-caret-right\"></i>\r\n                  </el-col>\r\n                  <el-col :span='18'>\r\n                    <el-tag type=\"warning\" v-for=\"item3 in item2.children\" :key=\"item3.id\"\r\n                    closable @close='removeRightById(scope.row,item3.id)'>\r\n                      {{ item3.authName }}\r\n                    </el-tag>\r\n                  </el-col>\r\n                </el-row>\r\n              </el-col>\r\n            </el-row>\r\n          </template>\r\n        </el-table-column>\r\n        <!-- 索引列 -->\r\n        <el-table-column type=\"index\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"roleName\" label=\"角色名称\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"roleDesc\" label=\"角色描述\">\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\">编辑</el-button>\r\n            <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\">删除</el-button>\r\n            <el-button @click=\"showSetRightDialog(scope.row)\" size=\"mini\" type=\"warning\" icon=\"el-icon-setting\">分配权限</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 分配权限对话框 -->\r\n      <el-dialog width=\"50%\" title=\"分配权限\" :visible.sync=\"setRightDialogVisible\"\r\n        @close=\"setRightDialog\">\r\n        <!-- 主体内容，树形控件 难点-->\r\n        <el-tree :default-checked-keys=\"defKeys\" ref=\"treeRefs\" :data=\"rightsList\" node-key=\"id\" default-expand-all show-checkbox :props=\"rightProps\"></el-tree>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"setRightDialogVisible = false\">取 消</el-button>\r\n          <!-- 点击角色分配权限 -->\r\n          <el-button type=\"primary\" @click=\"allotRights\" >确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      // 所有权限列表数据\r\n      rightsList:[],\r\n      rightProps:{\r\n        children: 'children',\r\n        label: 'authName'\r\n      },\r\n      // 所有角色列表数据\r\n      roleList:[],\r\n      // 默认设置分配角色权限对话框隐藏\r\n      setRightDialogVisible:false,\r\n      // 默认选中节点Id的数组值\r\n      defKeys:[],\r\n      // 角色Id\r\n      roleId:''\r\n    }\r\n  },\r\n  created(){\r\n    this.getRolesList()\r\n  },\r\n  methods:{\r\n    // 获取角色列表数据\r\n    async getRolesList() {\r\n      const { data:res } = await this.$http.get('roles')\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(res.meta.msg)\r\n      }\r\n      this.roleList = res.data\r\n    },\r\n    // 删除角色指定权限\r\n    async removeRightById(row,rightId) {\r\n      const confirmResult = await this.$confirm('此操作将永久删除该权限, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).catch(err => err)\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('已取消删除')\r\n      }\r\n      const { data:res } = await this.$http.delete(`roles/${row.id}/rights/${rightId}`)\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(res.meta.msg)\r\n      }\r\n      // 将返回的当前角色下最新的权限数据赋值\r\n      row.children = res.data\r\n    },\r\n    // 展示分配角色权限对话框\r\n    async showSetRightDialog(role) {\r\n      this.roleId = role.id\r\n      const { data:res } = await this.$http.get('rights/tree')\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(res.meta.msg)\r\n      }\r\n      this.rightsList = res.data\r\n      this.getLeafKeys(role,this.defKeys)\r\n      this.setRightDialogVisible = ! this.setRightDialogVisible\r\n    },\r\n    //通过递归的形式，获取角色下所有三级权限的id，并保存defKeys数组中\r\n    getLeafKeys(node,arr) {\r\n      // 如果当前node节点不包括children属性，则是三级节点\r\n      if (!node.children) {\r\n        return arr.push(node.id)\r\n      }\r\n      node.children.forEach(item => this.getLeafKeys(item,arr))\r\n    },\r\n    // 监听分配权限对话框事件，对defkeys初始化\r\n    setRightDialog(){\r\n      this.defKeys = []\r\n    },\r\n    // 获取半选和全选的权限的id\r\n    async allotRights(){\r\n      // js展开运算符\r\n      const keys = [\r\n        ...this.$refs.treeRefs.getCheckedKeys(),\r\n        ...this.$refs.treeRefs.getHalfCheckedKeys()\r\n      ]\r\n      const idStr = keys.join(',')\r\n      const { data:res } = await this.$http.post(`roles/\r\n      ${this.roleId}/rights`,{\r\n        rids:idStr\r\n      })\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(res.meta.msg)\r\n      }\r\n      this.$message.success(res.meta.msg)\r\n      this.getRolesList()\r\n      this.setRightDialogVisible = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-tag{\r\n  margin: 7px\r\n}\r\n.bdtop{\r\n  border-top:1px solid #eee;\r\n}\r\n.bdbody{\r\n  border-bottom:1px solid #eee;\r\n}\r\n.vccenter{\r\n  display:flex;\r\n  align-items: center;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/power"}]}