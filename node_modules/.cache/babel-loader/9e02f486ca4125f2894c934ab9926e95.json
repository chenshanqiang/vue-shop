{"remainingRequest":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\babel-loader\\lib\\index.js!G:\\Apache\\htdocs\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\Apache\\htdocs\\vue-shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\Apache\\htdocs\\vue-shop\\src\\components\\goods\\Cate.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\Apache\\htdocs\\vue-shop\\src\\components\\goods\\Cate.vue","mtime":1576840265124},{"path":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576839193839},{"path":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\babel-loader\\lib\\index.js","mtime":1576839161870},{"path":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576839193839},{"path":"G:\\Apache\\htdocs\\vue-shop\\node_modules\\vue-loader\\lib\\index.js","mtime":1576839773721}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"G:\\\\Apache\\\\htdocs\\\\vue-shop\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      // 商品分类的数据列表，默认为空\n      catelist: [],\n      // 总数据条数\n      total: 0,\n      queryInfo: {\n        type: 3,\n        pagenum: 1,\n        pagesize: 5\n      },\n      // 添加分类的表单数据名称\n      addCateForm: {\n        // 将要添加的分类对象\n        cat_name: '',\n        // 父级分类的id\n        cat_id: 0,\n        //分类的等级，默认是要添加的1级分类\n        cat_level: 0\n      },\n      // 添加分类对话框的显示与隐藏\n      addCateDialogVisible: false,\n      //表格各列的配置\n      columns: [{\n        label: '分类名称',\n        prop: 'cat_name'\n      }, {\n        label: '是否有效',\n        prop: 'cat_deleted',\n        //表示将当前列，设置为模板列\n        type: 'template',\n        // 表示当前列使用的模板名称\n        template: 'isok'\n      }, {\n        label: '排序',\n        prop: 'cat_level',\n        //表示将当前列，设置为模板列\n        type: 'template',\n        // 表示当前列使用的模板名称\n        template: 'order'\n      }, {\n        label: '操作',\n        prop: 'cat_level',\n        //表示将当前列，设置为模板列\n        type: 'template',\n        // 表示当前列使用的模板名称\n        template: 'ipt'\n      }],\n      // 添加分类表单规则对象\n      addCateFormRules: {\n        cat_name: [{\n          required: true,\n          message: '请输入分类名称',\n          trigger: 'blur'\n        }]\n      },\n      parentCateList: []\n    };\n  },\n  created: function created() {\n    this.getCateList();\n  },\n  methods: {\n    getCateList: function () {\n      var _getCateList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$http.get('categories', {\n                  params: this.queryInfo\n                });\n\n              case 2:\n                _ref = _context.sent;\n                res = _ref.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error(res.meta.msg));\n\n              case 6:\n                //把数据列表，赋值给catelist\n                this.catelist = res.data.result; // 为总数据条数赋值\n\n                this.total = res.data.total;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getCateList() {\n        return _getCateList.apply(this, arguments);\n      }\n\n      return getCateList;\n    }(),\n    handleSizeChange: function handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize;\n      this.getCateList();\n    },\n    handleCurrentChange: function handleCurrentChange(newPage) {\n      this.queryInfo.pagenum = newPage;\n      this.getCateList();\n    },\n    // 点击添加分类按钮显示添加分类对话框\n    showAddCateDialog: function showAddCateDialog() {\n      // 先获取父级分类的数据列表\n      this.getParentCateList(); // 在显示分类对话框\n\n      this.addCateDialogVisible = true;\n    },\n    // 获得父级分类的数据列表\n    getParentCateList: function () {\n      var _getParentCateList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _ref2, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$http.get('categories', {\n                  params: {\n                    type: 2\n                  }\n                });\n\n              case 2:\n                _ref2 = _context2.sent;\n                res = _ref2.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.$message.error(res.meta.msg));\n\n              case 6:\n                console.log(res.data);\n                this.parentCateList = res.data;\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getParentCateList() {\n        return _getParentCateList.apply(this, arguments);\n      }\n\n      return getParentCateList;\n    }()\n  }\n};",{"version":3,"sources":["Cate.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n     <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <!-- 添加分类按钮 -->\r\n      <el-row>\r\n        <el-col>\r\n          <el-button type=\"primary\" @click=\"showAddCateDialog\">添加分类</el-button>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 表格 -->\r\n      <tree-table class=\"treeTable\" :data=\"catelist\" :columns=\"columns\" show-index :show-row-hover=\"false\"\r\n       :selection-type=\"false\" :expand-type=\"false\" border>\r\n       <!-- 是否有效模板 -->\r\n        <template slot=\"isok\" scope=\"scope\">\r\n          <i v-if=\"scope.row.cat_deleted == false\" class=\"el-icon-success\" style=\"color:#67C23A\"></i>\r\n          <i v-else class=\"el-icon-error\"></i>\r\n        </template>\r\n        <!-- 排序 -->\r\n        <template slot=\"order\" scope=\"scope\">\r\n          <el-tag v-if=\"scope.row.cat_level == '0'\" size=\"mini\">一级</el-tag>\r\n          <el-tag type=\"success\" v-else-if=\"scope.row.cat_level == '1'\" size=\"mini\">二级</el-tag>\r\n          <el-tag type=\"warning\" v-else size=\"mini\">三级</el-tag>\r\n        </template>\r\n        <!-- 操作 -->\r\n        <template slot=\"ipt\">\r\n          <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\">编辑</el-button>\r\n          <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\">删除</el-button>\r\n        </template>\r\n      </tree-table>\r\n      <!-- 分页区域 -->\r\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pagenum\"\r\n        :page-sizes=\"[1, 2, 5, 10]\" :page-size=\"queryInfo.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n      </el-pagination>\r\n      <!-- 添加分类对话框 -->\r\n      <el-dialog title=\"添加分类\" :visible.sync=\"addCateDialogVisible\" width=\"50%\">\r\n        <!-- 主体区域 -->\r\n        <el-form  :model=\"addCateForm\" :rules=\"addCateFormRules\" ref=\"addCateFormmRef\" label-width=\"100px\">\r\n          <el-form-item label=\"分类名称：\" prop=\"cat_name\">\r\n            <el-input v-model=\"addCateForm.cat_name\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"父级分类：\">\r\n            \r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"addCateDialogVisible = false\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data(){\r\n    return {\r\n      // 商品分类的数据列表，默认为空\r\n      catelist:[],\r\n      // 总数据条数\r\n      total:0,\r\n      queryInfo:{\r\n        type:3,\r\n        pagenum:1,\r\n        pagesize:5\r\n      },\r\n      // 添加分类的表单数据名称\r\n      addCateForm:{\r\n        // 将要添加的分类对象\r\n        cat_name:'',\r\n        // 父级分类的id\r\n        cat_id:0,\r\n        //分类的等级，默认是要添加的1级分类\r\n        cat_level:0\r\n      },\r\n      // 添加分类对话框的显示与隐藏\r\n      addCateDialogVisible:false,\r\n      //表格各列的配置\r\n      columns: [\r\n          {\r\n            label: '分类名称',\r\n            prop: 'cat_name'\r\n          },\r\n          {\r\n            label: '是否有效',\r\n            prop:'cat_deleted',\r\n            //表示将当前列，设置为模板列\r\n            type: 'template',\r\n            // 表示当前列使用的模板名称\r\n            template: 'isok'\r\n          },\r\n          {\r\n            label: '排序',\r\n            prop:'cat_level',\r\n            //表示将当前列，设置为模板列\r\n            type: 'template',\r\n            // 表示当前列使用的模板名称\r\n            template: 'order'\r\n          },\r\n          {\r\n            label: '操作',\r\n            prop:'cat_level',\r\n            //表示将当前列，设置为模板列\r\n            type: 'template',\r\n            // 表示当前列使用的模板名称\r\n            template: 'ipt'\r\n          }\r\n        ],\r\n        // 添加分类表单规则对象\r\n        addCateFormRules:{\r\n          cat_name:[\r\n            { required: true, message: '请输入分类名称', trigger: 'blur' }\r\n          ]\r\n        },\r\n        parentCateList:[]\r\n    }\r\n  },\r\n  created(){\r\n    this.getCateList()\r\n  },\r\n  methods:{\r\n    async getCateList() {\r\n      const { data:res } = await this.$http.get('categories',{ params:this.queryInfo })\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(res.meta.msg)\r\n      }\r\n      //把数据列表，赋值给catelist\r\n      this.catelist = res.data.result\r\n      // 为总数据条数赋值\r\n      this.total = res.data.total\r\n    },\r\n    handleSizeChange(newSize) {\r\n      this.queryInfo.pagesize = newSize\r\n      this.getCateList()\r\n    },\r\n    handleCurrentChange(newPage) {\r\n      this.queryInfo.pagenum = newPage\r\n      this.getCateList()\r\n    },\r\n    // 点击添加分类按钮显示添加分类对话框\r\n    showAddCateDialog() {\r\n      // 先获取父级分类的数据列表\r\n      this.getParentCateList()\r\n      // 在显示分类对话框\r\n      this.addCateDialogVisible = true\r\n    },\r\n    // 获得父级分类的数据列表\r\n    async getParentCateList() {\r\n      const { data:res } = await this.$http.get('categories',{ params:{ type:2 } })\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(res.meta.msg)\r\n      }\r\n      console.log(res.data)\r\n      this.parentCateList = res.data\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n  .treeTable {\r\n    margin-top: 15px;\r\n  }\r\n</style>"],"sourceRoot":"src/components/goods"}]}