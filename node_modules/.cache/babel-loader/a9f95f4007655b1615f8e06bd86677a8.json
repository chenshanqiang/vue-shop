{"remainingRequest":"g:\\Apache\\htdocs\\vue-shop\\node_modules\\babel-loader\\lib\\index.js!g:\\Apache\\htdocs\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!g:\\Apache\\htdocs\\vue-shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!g:\\Apache\\htdocs\\vue-shop\\src\\components\\user\\Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"g:\\Apache\\htdocs\\vue-shop\\src\\components\\user\\Users.vue","mtime":1576071069332},{"path":"g:\\Apache\\htdocs\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"g:\\Apache\\htdocs\\vue-shop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"g:\\Apache\\htdocs\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"g:\\Apache\\htdocs\\vue-shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"g:\\\\Apache\\\\htdocs\\\\vue-shop\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    //自定义定义验证邮箱的规则\n    var checkEmail = function checkEmail(rule, value, callback) {\n      //验证邮箱的正则表达式\n      var regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/;\n\n      if (regEmail.test(value)) {\n        return callback();\n      }\n\n      callback(new Error('请输入合法的邮箱'));\n    }; //自定义定义验证手机的规则\n\n\n    var checkMobile = function checkMobile(rule, value, callback) {\n      //验证手机号的正则表达式\n      var regMobile = /^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/;\n\n      if (regMobile.test(value)) {\n        return callback();\n      }\n\n      callback(new Error('请输入合法的手机号'));\n    };\n\n    return {\n      //获取用户列表的参数对象\n      queryInfo: {\n        query: '',\n        pagenum: 1,\n        pagesize: 2\n      },\n      userList: [],\n      total: 0,\n      //控制添加用户对话框的显示与隐藏\n      addDialogVisible: false,\n      //控制修改用户信息对话框的显示与隐藏\n      editDialogVisible: false,\n      //添加用户信息\n      addForm: {\n        username: '',\n        password: '',\n        email: '',\n        mobile: ''\n      },\n      //查询到的用户信息\n      editForm: {},\n      //校验规则\n      addFormRules: {\n        //验证用户名是否合法\n        username: [{\n          required: true,\n          message: '请输入用户名称',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 6,\n          message: '长度在 2 到 6个字符',\n          trigger: 'blur'\n        }],\n        //验证密码是否合法\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 12,\n          message: '长度在 6 到 12 个字符',\n          trigger: 'blur'\n        }],\n        //验证邮箱是否合法\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        mobile: [{\n          required: true,\n          message: '请输入手机号',\n          trigger: 'blur'\n        }, {\n          validator: checkMobile,\n          trigger: 'blur'\n        }]\n      },\n      // 控制分配角色对话框显示与隐藏\n      setRoleDialogVisible: false,\n      //分配角色的用户信息\n      userInfo: {},\n      // 角色列表\n      rolesList: [],\n      selectedRoleId: ''\n    };\n  },\n  methods: {\n    getUserList: function () {\n      var _getUserList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _ref, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$http.get('users', {\n                  params: this.queryInfo\n                });\n\n              case 2:\n                _ref = _context.sent;\n                res = _ref.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.$message.error(res.meta.msg));\n\n              case 6:\n                this.userList = res.data.users;\n                this.total = res.data.total;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getUserList() {\n        return _getUserList.apply(this, arguments);\n      }\n\n      return getUserList;\n    }(),\n    //监听pagesize改变的事件\n    handleSizeChange: function handleSizeChange(pagesize) {\n      this.queryInfo.pagesize = pagesize;\n      this.getUserList();\n    },\n    //监听页码值改变的事件\n    handleCurrentChange: function handleCurrentChange(pagenum) {\n      this.queryInfo.pagenum = pagenum;\n      this.getUserList();\n    },\n    //监听swith状态变化\n    userStateChanged: function () {\n      var _userStateChanged = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(userinfo) {\n        var _ref2, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$http.put(\"users/\".concat(userinfo.id, \" /state/\").concat(userinfo.mg_state));\n\n              case 2:\n                _ref2 = _context2.sent;\n                res = _ref2.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                userinfo.mg_state = !userinfo.mg_state;\n                return _context2.abrupt(\"return\", this.$message.error(res.meta.msg));\n\n              case 7:\n                this.$message.success(res.meta.msg);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function userStateChanged(_x) {\n        return _userStateChanged.apply(this, arguments);\n      }\n\n      return userStateChanged;\n    }(),\n    //监听添加用户对话框的关闭事件\n    addDialogClosed: function addDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n    //点击按钮,添加用户\n    addUser: function addUser() {\n      var _this = this;\n\n      this.$refs.addFormRef.validate(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee3(val) {\n          var _ref4, res;\n\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (val) {\n                    _context3.next = 2;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\");\n\n                case 2:\n                  _context3.next = 4;\n                  return _this.$http.post('/users', _this.addForm);\n\n                case 4:\n                  _ref4 = _context3.sent;\n                  res = _ref4.data;\n\n                  if (!(res.meta.status !== 201)) {\n                    _context3.next = 8;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\", _this.$message.error(res.meta.msg));\n\n                case 8:\n                  _this.$message.success(res.meta.msg); //隐藏添加用户对话框\n\n\n                  _this.addDialogVisible = false; //重新获取用户列表\n\n                  _this.getUserList();\n\n                case 11:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    },\n    //监听修改用户对话框的关闭事件\n    editDialogClosed: function editDialogClosed() {\n      this.$refs.editFormRef.resetFields();\n    },\n    //点击按钮,修改用户\n    showEditDialog: function () {\n      var _showEditDialog = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(id) {\n        var _ref5, res;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.$http.get('users/' + id);\n\n              case 2:\n                _ref5 = _context4.sent;\n                res = _ref5.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.$message.error(res.meta.msg));\n\n              case 6:\n                this.editForm = res.data;\n                this.editDialogVisible = true;\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function showEditDialog(_x3) {\n        return _showEditDialog.apply(this, arguments);\n      }\n\n      return showEditDialog;\n    }(),\n    //修改用户信息\n    editUserInfo: function editUserInfo(id) {\n      var _this2 = this;\n\n      //用户信息修改预验证\n      this.$refs.editFormRef.validate(\n      /*#__PURE__*/\n      function () {\n        var _ref6 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee5(valid) {\n          var _ref7, res;\n\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  if (valid) {\n                    _context5.next = 2;\n                    break;\n                  }\n\n                  return _context5.abrupt(\"return\");\n\n                case 2:\n                  _context5.next = 4;\n                  return _this2.$http.put('users/' + _this2.editForm.id, {\n                    email: _this2.editForm.email,\n                    mobile: _this2.editForm.mobile\n                  });\n\n                case 4:\n                  _ref7 = _context5.sent;\n                  res = _ref7.data;\n\n                  if (!(res.meta.status !== 200)) {\n                    _context5.next = 8;\n                    break;\n                  }\n\n                  return _context5.abrupt(\"return\", _this2.$message.error(res.meta.msg));\n\n                case 8:\n                  //关闭对话框\n                  _this2.editDialogVisible = false; //重新获取数据列表\n\n                  _this2.getUserList(); //数据修改成功\n\n\n                  _this2.$message.success(res.meta.msg);\n\n                case 11:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x4) {\n          return _ref6.apply(this, arguments);\n        };\n      }());\n    },\n    //删除用户信息\n    delUserById: function () {\n      var _delUserById = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(id) {\n        var confirmResult, _ref8, res;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'warning'\n                }).catch(function (err) {\n                  return err;\n                });\n\n              case 2:\n                confirmResult = _context6.sent;\n\n                if (!(confirmResult !== 'confirm')) {\n                  _context6.next = 5;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", this.$message.info('已取消删除'));\n\n              case 5:\n                _context6.next = 7;\n                return this.$http.delete('users/' + id);\n\n              case 7:\n                _ref8 = _context6.sent;\n                res = _ref8.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context6.next = 11;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", this.$message.error(res.meta.msg));\n\n              case 11:\n                this.$message.success(res.meta.msg);\n                this.getUserList();\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function delUserById(_x5) {\n        return _delUserById.apply(this, arguments);\n      }\n\n      return delUserById;\n    }(),\n    //点击按钮显示分配角色对话框\n    setRole: function () {\n      var _setRole = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(userinfo) {\n        var _ref9, res;\n\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.userInfo = userinfo; //在展示对话框之前，获取所有角色的列表\n\n                _context7.next = 3;\n                return this.$http.get('roles');\n\n              case 3:\n                _ref9 = _context7.sent;\n                res = _ref9.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context7.next = 7;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", this.$message.error(res.meta.msg));\n\n              case 7:\n                this.rolesList = res.data;\n                this.setRoleDialogVisible = true;\n\n              case 9:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function setRole(_x6) {\n        return _setRole.apply(this, arguments);\n      }\n\n      return setRole;\n    }(),\n    // 点击按钮分配角色\n    saveRoleInfo: function () {\n      var _saveRoleInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8() {\n        var _ref10, res;\n\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (this.selectedRoleId) {\n                  _context8.next = 2;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", this.$message.error('请选择要分配的角色'));\n\n              case 2:\n                _context8.next = 4;\n                return this.$http.put(\"users/\".concat(this.userInfo.id, \"/role\"), {\n                  rid: this.selectedRoleId\n                });\n\n              case 4:\n                _ref10 = _context8.sent;\n                res = _ref10.data;\n\n                if (!(res.meta.status !== 200)) {\n                  _context8.next = 8;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", this.$message.error(res.meta.msg));\n\n              case 8:\n                this.$message.success('更新角色成功！');\n                this.getUserList();\n                this.setRoleDialogVisible = false;\n\n              case 11:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function saveRoleInfo() {\n        return _saveRoleInfo.apply(this, arguments);\n      }\n\n      return saveRoleInfo;\n    }(),\n    //监听分配角色对话框关闭事件\n    setRoleDialogClosed: function setRoleDialogClosed() {\n      this.selectedRoleId = '';\n      this.userInfo = '';\n    }\n  },\n  created: function created() {\n    this.getUserList();\n  }\n};",{"version":3,"sources":["Users.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"8\">\r\n          <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList\">\r\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUserList\"></el-button>\r\n          </el-input>\r\n        </el-col>\r\n        <el-col :span=\"4\">\r\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加用户</el-button>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 用户列表区域 -->\r\n      <el-table :data=\"userList\" border stripe>\r\n        <!-- 添加type属性值为index即索引列 -->\r\n        <el-table-column  type=\"index\"></el-table-column>\r\n        <el-table-column  label=\"姓名\" prop=\"username\"></el-table-column>\r\n        <el-table-column  label=\"邮箱\" prop=\"email\"></el-table-column>\r\n        <el-table-column  label=\"电话\" prop=\"mobile\"></el-table-column>\r\n        <el-table-column  label=\"角色\" prop=\"role_name\"></el-table-column>\r\n        <el-table-column  label=\"状态\">\r\n          <!--\r\n            1.作用插槽的使用,通过scope.row获得作用域的值\r\n            2.这里父组件是el-table，父组件将值userlist传给了子组件，\r\n            然后通过template的slot-scope属性获得了userlist值，对子组件的\r\n            内容进行加工处理\r\n          -->\r\n          <template slot-scope=\"scope\">\r\n            <el-switch v-model=\"scope.row.mg_state\" @change=\"userStateChanged(scope.row)\"></el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column  label=\"操作\"  width=\"180px\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row.id)\"></el-button>\r\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"delUserById(scope.row.id)\"></el-button>\r\n            <el-tooltip effect=\"dark\" content=\"分配角色\" placement=\"top\" :enterable=\"false\">\r\n              <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\" @click=\"setRole(scope.row)\"></el-button>\r\n            </el-tooltip>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 添加用户对话框 -->\r\n      <el-dialog title=\"添加用户\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\r\n        <!-- 主体区域 -->\r\n        <el-form  :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\r\n          <el-form-item label=\"姓名\" prop=\"username\">\r\n            <el-input v-model=\"addForm.username\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" prop=\"password\">\r\n            <el-input v-model=\"addForm.password\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"邮箱\" prop=\"email\">\r\n            <el-input v-model=\"addForm.email\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"手机\" prop=\"mobile\">\r\n            <el-input v-model=\"addForm.mobile\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n      <!-- 修改用户信息对话框 -->\r\n      <el-dialog title=\"修改用户\" :visible.sync=\"editDialogVisible\" width=\"50%\" @close=\"editDialogClosed\">\r\n        <!-- 主体区域 -->\r\n        <el-form  :model=\"editForm\" :rules=\"addFormRules\" ref=\"editFormRef\" label-width=\"70px\">\r\n          <el-form-item label=\"姓名\">\r\n            <el-input v-model=\"editForm.username\" disabled></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"邮箱\" prop=\"email\">\r\n            <el-input v-model=\"editForm.email\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"手机号\" prop=\"mobile\">\r\n            <el-input v-model=\"editForm.mobile\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n      <!-- 分配角色对话框 -->\r\n      <el-dialog title=\"分配角色\" :visible.sync=\"setRoleDialogVisible\"\r\n        width=\"50%\" @close=\"setRoleDialogClosed\">\r\n        <div>\r\n          <p>当前的用户：{{userInfo.username}}</p>\r\n          <p>当前的角色：{{userInfo.role_name}}</p>\r\n          <p>分配新角色：\r\n            <el-select v-model=\"selectedRoleId\" placeholder=\"请选择\">\r\n              <el-option\r\n                v-for=\"item in rolesList\"\r\n                :key=\"item.id\"\r\n                :label=\"item.roleName\"\r\n                :value=\"item.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </p>\r\n        </div>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"setRoleDialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"saveRoleInfo\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n      <!-- 分页区域 -->\r\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pagenum\"\r\n        :page-sizes=\"[1, 2, 5, 10]\" :page-size=\"queryInfo.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n      </el-pagination>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data(){\r\n    //自定义定义验证邮箱的规则\r\n    var checkEmail = (rule,value,callback) => {\r\n      //验证邮箱的正则表达式\r\n      const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/\r\n      if (regEmail.test(value)) {\r\n        return callback()\r\n      }\r\n      callback(new Error('请输入合法的邮箱'))\r\n    }\r\n    //自定义定义验证手机的规则\r\n    var checkMobile = (rule,value,callback) => {\r\n      //验证手机号的正则表达式\r\n      const regMobile = /^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/\r\n      if (regMobile.test(value)) {\r\n        return callback()\r\n      }\r\n      callback(new Error('请输入合法的手机号'))\r\n    }\r\n    return {\r\n      //获取用户列表的参数对象\r\n      queryInfo:{\r\n        query:'',\r\n        pagenum:1,\r\n        pagesize:2\r\n      },\r\n      userList:[],\r\n      total:0,\r\n      //控制添加用户对话框的显示与隐藏\r\n      addDialogVisible:false,\r\n      //控制修改用户信息对话框的显示与隐藏\r\n      editDialogVisible:false,\r\n      //添加用户信息\r\n      addForm:{\r\n        username:'',\r\n        password:'',\r\n        email:'',\r\n        mobile:''\r\n      },\r\n      //查询到的用户信息\r\n      editForm:{},\r\n      //校验规则\r\n      addFormRules:{\r\n        //验证用户名是否合法\r\n        username:[\r\n          { required: true, message: '请输入用户名称', trigger: 'blur' },\r\n          { min: 2, max: 6, message: '长度在 2 到 6个字符', trigger: 'blur' }\r\n        ],\r\n        //验证密码是否合法\r\n        password:[\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 6, max: 12, message: '长度在 6 到 12 个字符', trigger: 'blur' }\r\n        ],\r\n         //验证邮箱是否合法\r\n        email:[\r\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n          { validator: checkEmail, trigger: 'blur' }\r\n        ],\r\n        mobile:[\r\n          { required: true, message: '请输入手机号', trigger: 'blur' },\r\n          { validator: checkMobile, trigger: 'blur' }\r\n        ]\r\n      },\r\n      // 控制分配角色对话框显示与隐藏\r\n      setRoleDialogVisible:false,\r\n      //分配角色的用户信息\r\n      userInfo:{},\r\n      // 角色列表\r\n      rolesList:[],\r\n      selectedRoleId:''\r\n\r\n    }\r\n  },\r\n  methods:{\r\n      async getUserList () {\r\n        const { data:res } = await this.$http.get('users',{ params:this.queryInfo })\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.userList = res.data.users\r\n        this.total = res.data.total\r\n      },\r\n      //监听pagesize改变的事件\r\n      handleSizeChange(pagesize) {\r\n        this.queryInfo.pagesize = pagesize\r\n        this.getUserList()\r\n      },\r\n      //监听页码值改变的事件\r\n      handleCurrentChange(pagenum) {\r\n        this.queryInfo.pagenum = pagenum\r\n        this.getUserList()\r\n      },\r\n      //监听swith状态变化\r\n      async userStateChanged(userinfo) {\r\n        const { data:res } = await this.$http.put(`users/${\r\n          userinfo.id} /state/${userinfo.mg_state}`)\r\n        if (res.meta.status !== 200) {\r\n          userinfo.mg_state = ! userinfo.mg_state\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.$message.success(res.meta.msg)\r\n      },\r\n      //监听添加用户对话框的关闭事件\r\n      addDialogClosed() {\r\n        this.$refs.addFormRef.resetFields()\r\n      },\r\n      //点击按钮,添加用户\r\n      addUser() {\r\n        this.$refs.addFormRef.validate(async val => {\r\n          if (!val) return\r\n          const { data:res } = await this.$http.post('/users',this.addForm)\r\n          //可以发起添加用户的请求\r\n          if (res.meta.status !== 201) {\r\n            return this.$message.error(res.meta.msg)\r\n          }\r\n          this.$message.success(res.meta.msg)\r\n          //隐藏添加用户对话框\r\n          this.addDialogVisible = false\r\n          //重新获取用户列表\r\n          this.getUserList()\r\n        })\r\n      },\r\n      //监听修改用户对话框的关闭事件\r\n      editDialogClosed() {\r\n        this.$refs.editFormRef.resetFields()\r\n      },\r\n       //点击按钮,修改用户\r\n      async showEditDialog(id) {\r\n        const { data:res } = await this.$http.get('users/' + id)\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.editForm = res.data\r\n        this.editDialogVisible = true\r\n      },\r\n      //修改用户信息\r\n      editUserInfo(id) {\r\n        //用户信息修改预验证\r\n        this.$refs.editFormRef.validate(async valid => {\r\n            if (!valid) return\r\n            const { data:res } = await this.$http.put('users/' + this.editForm.id,{\r\n              email:this.editForm.email,\r\n              mobile:this.editForm.mobile\r\n            })\r\n            if (res.meta.status !== 200) {\r\n              return this.$message.error(res.meta.msg)\r\n            }\r\n            //关闭对话框\r\n            this.editDialogVisible = false\r\n            //重新获取数据列表\r\n            this.getUserList()\r\n            //数据修改成功\r\n            this.$message.success(res.meta.msg)\r\n        })\r\n      },\r\n      //删除用户信息\r\n      async delUserById(id) {\r\n        const confirmResult = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).catch(err => err)\r\n        if (confirmResult !== 'confirm') {\r\n          return this.$message.info('已取消删除')\r\n        }\r\n        const { data:res } = await this.$http.delete('users/' + id)\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.$message.success(res.meta.msg)\r\n        this.getUserList()\r\n      },\r\n      //点击按钮显示分配角色对话框\r\n      async setRole(userinfo) {\r\n        this.userInfo = userinfo\r\n        //在展示对话框之前，获取所有角色的列表\r\n        const { data:res } = await this.$http.get('roles')\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.rolesList = res.data\r\n        this.setRoleDialogVisible = true\r\n      },\r\n      // 点击按钮分配角色\r\n      async saveRoleInfo() {\r\n        if (!this.selectedRoleId) {\r\n          return this.$message.error('请选择要分配的角色')\r\n        }\r\n        const { data:res } = await this.$http.put(\r\n          `users/${this.userInfo.id}/role`,{\r\n          rid:this.selectedRoleId\r\n        })\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.$message.success('更新角色成功！')\r\n        this.getUserList()\r\n        this.setRoleDialogVisible = false\r\n      },\r\n      //监听分配角色对话框关闭事件\r\n      setRoleDialogClosed() {\r\n        this.selectedRoleId = ''\r\n        this.userInfo = ''\r\n      }\r\n  },\r\n  created () {\r\n    this.getUserList()\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"],"sourceRoot":"src/components/user"}]}