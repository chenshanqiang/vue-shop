{"remainingRequest":"g:\\Apache\\htdocs\\vue-shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!g:\\Apache\\htdocs\\vue-shop\\src\\components\\user\\Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"g:\\Apache\\htdocs\\vue-shop\\src\\components\\user\\Users.vue","mtime":1576071069332},{"path":"g:\\Apache\\htdocs\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"g:\\Apache\\htdocs\\vue-shop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"g:\\Apache\\htdocs\\vue-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"g:\\Apache\\htdocs\\vue-shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  data(){\r\n    //自定义定义验证邮箱的规则\r\n    var checkEmail = (rule,value,callback) => {\r\n      //验证邮箱的正则表达式\r\n      const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/\r\n      if (regEmail.test(value)) {\r\n        return callback()\r\n      }\r\n      callback(new Error('请输入合法的邮箱'))\r\n    }\r\n    //自定义定义验证手机的规则\r\n    var checkMobile = (rule,value,callback) => {\r\n      //验证手机号的正则表达式\r\n      const regMobile = /^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/\r\n      if (regMobile.test(value)) {\r\n        return callback()\r\n      }\r\n      callback(new Error('请输入合法的手机号'))\r\n    }\r\n    return {\r\n      //获取用户列表的参数对象\r\n      queryInfo:{\r\n        query:'',\r\n        pagenum:1,\r\n        pagesize:2\r\n      },\r\n      userList:[],\r\n      total:0,\r\n      //控制添加用户对话框的显示与隐藏\r\n      addDialogVisible:false,\r\n      //控制修改用户信息对话框的显示与隐藏\r\n      editDialogVisible:false,\r\n      //添加用户信息\r\n      addForm:{\r\n        username:'',\r\n        password:'',\r\n        email:'',\r\n        mobile:''\r\n      },\r\n      //查询到的用户信息\r\n      editForm:{},\r\n      //校验规则\r\n      addFormRules:{\r\n        //验证用户名是否合法\r\n        username:[\r\n          { required: true, message: '请输入用户名称', trigger: 'blur' },\r\n          { min: 2, max: 6, message: '长度在 2 到 6个字符', trigger: 'blur' }\r\n        ],\r\n        //验证密码是否合法\r\n        password:[\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 6, max: 12, message: '长度在 6 到 12 个字符', trigger: 'blur' }\r\n        ],\r\n         //验证邮箱是否合法\r\n        email:[\r\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n          { validator: checkEmail, trigger: 'blur' }\r\n        ],\r\n        mobile:[\r\n          { required: true, message: '请输入手机号', trigger: 'blur' },\r\n          { validator: checkMobile, trigger: 'blur' }\r\n        ]\r\n      },\r\n      // 控制分配角色对话框显示与隐藏\r\n      setRoleDialogVisible:false,\r\n      //分配角色的用户信息\r\n      userInfo:{},\r\n      // 角色列表\r\n      rolesList:[],\r\n      selectedRoleId:''\r\n\r\n    }\r\n  },\r\n  methods:{\r\n      async getUserList () {\r\n        const { data:res } = await this.$http.get('users',{ params:this.queryInfo })\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.userList = res.data.users\r\n        this.total = res.data.total\r\n      },\r\n      //监听pagesize改变的事件\r\n      handleSizeChange(pagesize) {\r\n        this.queryInfo.pagesize = pagesize\r\n        this.getUserList()\r\n      },\r\n      //监听页码值改变的事件\r\n      handleCurrentChange(pagenum) {\r\n        this.queryInfo.pagenum = pagenum\r\n        this.getUserList()\r\n      },\r\n      //监听swith状态变化\r\n      async userStateChanged(userinfo) {\r\n        const { data:res } = await this.$http.put(`users/${\r\n          userinfo.id} /state/${userinfo.mg_state}`)\r\n        if (res.meta.status !== 200) {\r\n          userinfo.mg_state = ! userinfo.mg_state\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.$message.success(res.meta.msg)\r\n      },\r\n      //监听添加用户对话框的关闭事件\r\n      addDialogClosed() {\r\n        this.$refs.addFormRef.resetFields()\r\n      },\r\n      //点击按钮,添加用户\r\n      addUser() {\r\n        this.$refs.addFormRef.validate(async val => {\r\n          if (!val) return\r\n          const { data:res } = await this.$http.post('/users',this.addForm)\r\n          //可以发起添加用户的请求\r\n          if (res.meta.status !== 201) {\r\n            return this.$message.error(res.meta.msg)\r\n          }\r\n          this.$message.success(res.meta.msg)\r\n          //隐藏添加用户对话框\r\n          this.addDialogVisible = false\r\n          //重新获取用户列表\r\n          this.getUserList()\r\n        })\r\n      },\r\n      //监听修改用户对话框的关闭事件\r\n      editDialogClosed() {\r\n        this.$refs.editFormRef.resetFields()\r\n      },\r\n       //点击按钮,修改用户\r\n      async showEditDialog(id) {\r\n        const { data:res } = await this.$http.get('users/' + id)\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.editForm = res.data\r\n        this.editDialogVisible = true\r\n      },\r\n      //修改用户信息\r\n      editUserInfo(id) {\r\n        //用户信息修改预验证\r\n        this.$refs.editFormRef.validate(async valid => {\r\n            if (!valid) return\r\n            const { data:res } = await this.$http.put('users/' + this.editForm.id,{\r\n              email:this.editForm.email,\r\n              mobile:this.editForm.mobile\r\n            })\r\n            if (res.meta.status !== 200) {\r\n              return this.$message.error(res.meta.msg)\r\n            }\r\n            //关闭对话框\r\n            this.editDialogVisible = false\r\n            //重新获取数据列表\r\n            this.getUserList()\r\n            //数据修改成功\r\n            this.$message.success(res.meta.msg)\r\n        })\r\n      },\r\n      //删除用户信息\r\n      async delUserById(id) {\r\n        const confirmResult = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).catch(err => err)\r\n        if (confirmResult !== 'confirm') {\r\n          return this.$message.info('已取消删除')\r\n        }\r\n        const { data:res } = await this.$http.delete('users/' + id)\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.$message.success(res.meta.msg)\r\n        this.getUserList()\r\n      },\r\n      //点击按钮显示分配角色对话框\r\n      async setRole(userinfo) {\r\n        this.userInfo = userinfo\r\n        //在展示对话框之前，获取所有角色的列表\r\n        const { data:res } = await this.$http.get('roles')\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.rolesList = res.data\r\n        this.setRoleDialogVisible = true\r\n      },\r\n      // 点击按钮分配角色\r\n      async saveRoleInfo() {\r\n        if (!this.selectedRoleId) {\r\n          return this.$message.error('请选择要分配的角色')\r\n        }\r\n        const { data:res } = await this.$http.put(\r\n          `users/${this.userInfo.id}/role`,{\r\n          rid:this.selectedRoleId\r\n        })\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.$message.success('更新角色成功！')\r\n        this.getUserList()\r\n        this.setRoleDialogVisible = false\r\n      },\r\n      //监听分配角色对话框关闭事件\r\n      setRoleDialogClosed() {\r\n        this.selectedRoleId = ''\r\n        this.userInfo = ''\r\n      }\r\n  },\r\n  created () {\r\n    this.getUserList()\r\n  }\r\n}\r\n",{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Users.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"8\">\r\n          <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList\">\r\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUserList\"></el-button>\r\n          </el-input>\r\n        </el-col>\r\n        <el-col :span=\"4\">\r\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加用户</el-button>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 用户列表区域 -->\r\n      <el-table :data=\"userList\" border stripe>\r\n        <!-- 添加type属性值为index即索引列 -->\r\n        <el-table-column  type=\"index\"></el-table-column>\r\n        <el-table-column  label=\"姓名\" prop=\"username\"></el-table-column>\r\n        <el-table-column  label=\"邮箱\" prop=\"email\"></el-table-column>\r\n        <el-table-column  label=\"电话\" prop=\"mobile\"></el-table-column>\r\n        <el-table-column  label=\"角色\" prop=\"role_name\"></el-table-column>\r\n        <el-table-column  label=\"状态\">\r\n          <!--\r\n            1.作用插槽的使用,通过scope.row获得作用域的值\r\n            2.这里父组件是el-table，父组件将值userlist传给了子组件，\r\n            然后通过template的slot-scope属性获得了userlist值，对子组件的\r\n            内容进行加工处理\r\n          -->\r\n          <template slot-scope=\"scope\">\r\n            <el-switch v-model=\"scope.row.mg_state\" @change=\"userStateChanged(scope.row)\"></el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column  label=\"操作\"  width=\"180px\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row.id)\"></el-button>\r\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"delUserById(scope.row.id)\"></el-button>\r\n            <el-tooltip effect=\"dark\" content=\"分配角色\" placement=\"top\" :enterable=\"false\">\r\n              <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\" @click=\"setRole(scope.row)\"></el-button>\r\n            </el-tooltip>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 添加用户对话框 -->\r\n      <el-dialog title=\"添加用户\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\r\n        <!-- 主体区域 -->\r\n        <el-form  :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\r\n          <el-form-item label=\"姓名\" prop=\"username\">\r\n            <el-input v-model=\"addForm.username\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" prop=\"password\">\r\n            <el-input v-model=\"addForm.password\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"邮箱\" prop=\"email\">\r\n            <el-input v-model=\"addForm.email\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"手机\" prop=\"mobile\">\r\n            <el-input v-model=\"addForm.mobile\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n      <!-- 修改用户信息对话框 -->\r\n      <el-dialog title=\"修改用户\" :visible.sync=\"editDialogVisible\" width=\"50%\" @close=\"editDialogClosed\">\r\n        <!-- 主体区域 -->\r\n        <el-form  :model=\"editForm\" :rules=\"addFormRules\" ref=\"editFormRef\" label-width=\"70px\">\r\n          <el-form-item label=\"姓名\">\r\n            <el-input v-model=\"editForm.username\" disabled></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"邮箱\" prop=\"email\">\r\n            <el-input v-model=\"editForm.email\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"手机号\" prop=\"mobile\">\r\n            <el-input v-model=\"editForm.mobile\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"editUserInfo\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n      <!-- 分配角色对话框 -->\r\n      <el-dialog title=\"分配角色\" :visible.sync=\"setRoleDialogVisible\"\r\n        width=\"50%\" @close=\"setRoleDialogClosed\">\r\n        <div>\r\n          <p>当前的用户：{{userInfo.username}}</p>\r\n          <p>当前的角色：{{userInfo.role_name}}</p>\r\n          <p>分配新角色：\r\n            <el-select v-model=\"selectedRoleId\" placeholder=\"请选择\">\r\n              <el-option\r\n                v-for=\"item in rolesList\"\r\n                :key=\"item.id\"\r\n                :label=\"item.roleName\"\r\n                :value=\"item.id\">\r\n              </el-option>\r\n            </el-select>\r\n          </p>\r\n        </div>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"setRoleDialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"saveRoleInfo\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n      <!-- 分页区域 -->\r\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"queryInfo.pagenum\"\r\n        :page-sizes=\"[1, 2, 5, 10]\" :page-size=\"queryInfo.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n      </el-pagination>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data(){\r\n    //自定义定义验证邮箱的规则\r\n    var checkEmail = (rule,value,callback) => {\r\n      //验证邮箱的正则表达式\r\n      const regEmail = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(\\.[a-zA-Z0-9_-])+/\r\n      if (regEmail.test(value)) {\r\n        return callback()\r\n      }\r\n      callback(new Error('请输入合法的邮箱'))\r\n    }\r\n    //自定义定义验证手机的规则\r\n    var checkMobile = (rule,value,callback) => {\r\n      //验证手机号的正则表达式\r\n      const regMobile = /^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/\r\n      if (regMobile.test(value)) {\r\n        return callback()\r\n      }\r\n      callback(new Error('请输入合法的手机号'))\r\n    }\r\n    return {\r\n      //获取用户列表的参数对象\r\n      queryInfo:{\r\n        query:'',\r\n        pagenum:1,\r\n        pagesize:2\r\n      },\r\n      userList:[],\r\n      total:0,\r\n      //控制添加用户对话框的显示与隐藏\r\n      addDialogVisible:false,\r\n      //控制修改用户信息对话框的显示与隐藏\r\n      editDialogVisible:false,\r\n      //添加用户信息\r\n      addForm:{\r\n        username:'',\r\n        password:'',\r\n        email:'',\r\n        mobile:''\r\n      },\r\n      //查询到的用户信息\r\n      editForm:{},\r\n      //校验规则\r\n      addFormRules:{\r\n        //验证用户名是否合法\r\n        username:[\r\n          { required: true, message: '请输入用户名称', trigger: 'blur' },\r\n          { min: 2, max: 6, message: '长度在 2 到 6个字符', trigger: 'blur' }\r\n        ],\r\n        //验证密码是否合法\r\n        password:[\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 6, max: 12, message: '长度在 6 到 12 个字符', trigger: 'blur' }\r\n        ],\r\n         //验证邮箱是否合法\r\n        email:[\r\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n          { validator: checkEmail, trigger: 'blur' }\r\n        ],\r\n        mobile:[\r\n          { required: true, message: '请输入手机号', trigger: 'blur' },\r\n          { validator: checkMobile, trigger: 'blur' }\r\n        ]\r\n      },\r\n      // 控制分配角色对话框显示与隐藏\r\n      setRoleDialogVisible:false,\r\n      //分配角色的用户信息\r\n      userInfo:{},\r\n      // 角色列表\r\n      rolesList:[],\r\n      selectedRoleId:''\r\n\r\n    }\r\n  },\r\n  methods:{\r\n      async getUserList () {\r\n        const { data:res } = await this.$http.get('users',{ params:this.queryInfo })\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.userList = res.data.users\r\n        this.total = res.data.total\r\n      },\r\n      //监听pagesize改变的事件\r\n      handleSizeChange(pagesize) {\r\n        this.queryInfo.pagesize = pagesize\r\n        this.getUserList()\r\n      },\r\n      //监听页码值改变的事件\r\n      handleCurrentChange(pagenum) {\r\n        this.queryInfo.pagenum = pagenum\r\n        this.getUserList()\r\n      },\r\n      //监听swith状态变化\r\n      async userStateChanged(userinfo) {\r\n        const { data:res } = await this.$http.put(`users/${\r\n          userinfo.id} /state/${userinfo.mg_state}`)\r\n        if (res.meta.status !== 200) {\r\n          userinfo.mg_state = ! userinfo.mg_state\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.$message.success(res.meta.msg)\r\n      },\r\n      //监听添加用户对话框的关闭事件\r\n      addDialogClosed() {\r\n        this.$refs.addFormRef.resetFields()\r\n      },\r\n      //点击按钮,添加用户\r\n      addUser() {\r\n        this.$refs.addFormRef.validate(async val => {\r\n          if (!val) return\r\n          const { data:res } = await this.$http.post('/users',this.addForm)\r\n          //可以发起添加用户的请求\r\n          if (res.meta.status !== 201) {\r\n            return this.$message.error(res.meta.msg)\r\n          }\r\n          this.$message.success(res.meta.msg)\r\n          //隐藏添加用户对话框\r\n          this.addDialogVisible = false\r\n          //重新获取用户列表\r\n          this.getUserList()\r\n        })\r\n      },\r\n      //监听修改用户对话框的关闭事件\r\n      editDialogClosed() {\r\n        this.$refs.editFormRef.resetFields()\r\n      },\r\n       //点击按钮,修改用户\r\n      async showEditDialog(id) {\r\n        const { data:res } = await this.$http.get('users/' + id)\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.editForm = res.data\r\n        this.editDialogVisible = true\r\n      },\r\n      //修改用户信息\r\n      editUserInfo(id) {\r\n        //用户信息修改预验证\r\n        this.$refs.editFormRef.validate(async valid => {\r\n            if (!valid) return\r\n            const { data:res } = await this.$http.put('users/' + this.editForm.id,{\r\n              email:this.editForm.email,\r\n              mobile:this.editForm.mobile\r\n            })\r\n            if (res.meta.status !== 200) {\r\n              return this.$message.error(res.meta.msg)\r\n            }\r\n            //关闭对话框\r\n            this.editDialogVisible = false\r\n            //重新获取数据列表\r\n            this.getUserList()\r\n            //数据修改成功\r\n            this.$message.success(res.meta.msg)\r\n        })\r\n      },\r\n      //删除用户信息\r\n      async delUserById(id) {\r\n        const confirmResult = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).catch(err => err)\r\n        if (confirmResult !== 'confirm') {\r\n          return this.$message.info('已取消删除')\r\n        }\r\n        const { data:res } = await this.$http.delete('users/' + id)\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.$message.success(res.meta.msg)\r\n        this.getUserList()\r\n      },\r\n      //点击按钮显示分配角色对话框\r\n      async setRole(userinfo) {\r\n        this.userInfo = userinfo\r\n        //在展示对话框之前，获取所有角色的列表\r\n        const { data:res } = await this.$http.get('roles')\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.rolesList = res.data\r\n        this.setRoleDialogVisible = true\r\n      },\r\n      // 点击按钮分配角色\r\n      async saveRoleInfo() {\r\n        if (!this.selectedRoleId) {\r\n          return this.$message.error('请选择要分配的角色')\r\n        }\r\n        const { data:res } = await this.$http.put(\r\n          `users/${this.userInfo.id}/role`,{\r\n          rid:this.selectedRoleId\r\n        })\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error(res.meta.msg)\r\n        }\r\n        this.$message.success('更新角色成功！')\r\n        this.getUserList()\r\n        this.setRoleDialogVisible = false\r\n      },\r\n      //监听分配角色对话框关闭事件\r\n      setRoleDialogClosed() {\r\n        this.selectedRoleId = ''\r\n        this.userInfo = ''\r\n      }\r\n  },\r\n  created () {\r\n    this.getUserList()\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"]}]}